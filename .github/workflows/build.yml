name: Build and Release

on:
  push:
    paths:
      - 'rgg_save_tool.py'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: pip install pyinstaller

      - name: Build Executable
        run: pyinstaller --onefile rgg_save_tool.py

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rgg_save_tool-${{ matrix.os }}
          path: dist/rgg_save_tool*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Determine Last Tag
        id: last-tag
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "none")
          echo "LAST_TAG=$LAST_TAG" >> $GITHUB_ENV

      - name: Generate New Tag
        id: new-tag
        run: |
          HASH=$(git rev-parse --short HEAD)
          if [ "${{ env.LAST_TAG }}" = "none" ]; then
            TAG_NAME="v1.0-${HASH}"
          else
            TAG_NAME="${{ env.LAST_TAG }}-${HASH}"
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Get Commits Since Last Tag
        id: commits
        run: |
          if [ "${{ env.LAST_TAG }}" != "none" ]; then
            COMMITS=$(git log ${{ env.LAST_TAG }}..HEAD --pretty=format:"- %s")
          else
            COMMITS=$(git log --pretty=format:"- %s")
          fi
          echo "COMMITS=$COMMITS" >> $GITHUB_ENV

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          body: |
            ### Commits Since Last Release
            ${{ env.COMMITS }}
          files: |
            dist/rgg_save_tool-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
